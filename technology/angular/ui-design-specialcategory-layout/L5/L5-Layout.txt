
===========================================
L5:

==>Layout:

	==>Angular: 10.0.3
	
	==>Enabled:
      "schematics": {
        "@schematics/angular:component": {
          "style": "less"
        }
    
    	==>Can we switch it to CSS, SCSS? yes
        
    ==>CSS: global:
            "styles": [
              "src/styles.less"
            ],    
    
    ==>Theming: Global:
    	==>Stage 1: Current: N/A
    	==>Stage 2: Add Angular's one of the 4 themes...: actually they are MD's 4 themes
    				==>1) These themes: not about layout - more like styling these selectors
    				==>...
						C:\Users\jerry\wksp\kbs\loginapp10>ng add @angular/material
						Your global Angular CLI version (10.1.3) is greater than your local
						version (10.0.3). The local Angular CLI version is used.
						
						To disable this warning use "ng config -g cli.warnings.versionMismatch false".
						Installing packages for tooling via npm.
						Installed packages for tooling via npm.
						? Choose a prebuilt theme name, or "custom" for a custom theme: (Use arrow keys)
						> Indigo/Pink        [ Preview: https://material.angular.io?theme=indigo-pink ]
						  Deep Purple/Amber  [ Preview: https://material.angular.io?theme=deeppurple-amber ]
						  Pink/Blue Grey     [ Preview: https://material.angular.io?theme=pink-bluegrey ]
						  Purple/Green       [ Preview: https://material.angular.io?theme=purple-green ]
						  Custom    				
    				==>Customized MD's Themes: not recommended for MD's themes
    	==>Stage 3: Add BT4 theme(s):
    				==>Customized BT4's Themes: too advanced...
    	==>Stage 4: Add MD's themes and/or CDK's themes
    	==>Stage 5: Add UI Components' themes:
    				==>Customized UI Components's Themes: not recommended: too complicated
    	
    ==>Work on src/styles.less?
    	==>Core:
    		==>Stage 1: Current: has nothing to do with Layout...
    		==>Stage 2: To Do...
    	==>Advanced:
    		==>add global styles to this file: TO DO
    		==>add import other style files to this file: TBD
    ==>
    
    ==>Methods:
    	==>Method 1: Enable global layout
    		==>Method 1-1:	app.component.html: it is the place, or: whatever <router-outlet> resides
    		
    		
    		==>Method 1-9:	Advanced layout:
    						1) global page: multiple or named <router-outlet>
    						2) sub-pages:   multiple or named <router-outlet>
    						https://angular.io/api/router/RouterOutlet: 2 main usage
    							{path: <base-path>, component: <component>, outlet: <target_outlet_name>}
    							http://base-path/primary-route-path(outlet-name:route-path)
    	==>Method 2: Enable FeatureModule-Based layout

    	==>Method 3: Enable Page-Based layout
    	
==>Styling:
    ==>BT4:
    	==>Stage 1: Enabled:
    				==>Current app is all from BT4
    	==>Stage 2: Better Usage: To Do...
    				==>Add/Configure more layout parts:
    					==>1) BT4: Grid/Flex/...
    					==>2) BT4: Card
    					
    					==>9) BT4: RWD: Not now
    					
    					Notes:
    						==>Right now: Not focus on becoming BT4 experts or usage: Revisit back to BT4 after MD and CDK enabled
    									  ==>Right now: 33% Mr Thu
    									  ==>Focus too much: then become 50% Mr Thu: not so good
    									  	 ==>Actually the final app should be: 20% (1/5) Mr Thu or: 1/7 MrThu
    									  	 ==>Should be 1/6 MrThu: 17% MrThu: think about Thursday is only 1 day from 7 days...
    									  	 
    									  	 Final App: UI: Components/Styling:
    									  	 	==>40% MD
    									  	 	==>10% BT4
    									  	 	==>10% CDK
    									  	 	==>23% UI Components:
    									  	 		GoogleMap
    									  	 		AGM
    									  	 		AG-Grid
    									  	 		PrimeNG
    									  	 		jQWidget
    									  	 		...
    									  	 	==>17% MrThu
    									  	 	
    						==>Right now: Penetrate to MD and CDK...
    				==>...
    	==>Stage 3: Enable MD and CDK together
    	==>...
    	
    ==>MD:
    	==>Stage 1: Enabled? - No - Not Yet
    	==>Stage 2: Wait until BT4-stage3
    	==>

    ==>CDK:
    	==>Stage 1: Enabled? - No - Not Yet
    	==>Stage 2: Wait until BT4-stage3
    	==>

===========================================
Layout Design/Implementation: Method 1-1

==>Scenario: Global Look and Feel?
	==>:root
	==>--
	Notes:
		==>Stage 1: Basically no need because I use MD and CDK and BT4, ...
		==>Stage ...: TBD
		
		But: can enable a unified font type/family...

==>Methods List:

	==>

	==>Use: structure directives:
		==>Any usage limitations?
		Example: <nav class="navbar navbar-expand navbar-dark bg-dark" *ngIf="user">
		
	==>

===========================================
WorkLog:

==><div class="text-center mt-4">
	text-center: html default one? - from BT4
	mt-4: margin-top: 1-5
	==>Where are the BT4 coming from into this app?
	<link href="//netdna.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" rel="stylesheet" />
==>BT4: If we use a lot of BT4:
	==>We don't need Tom Thu
==>BT4: Code-Completion: which IDEs? - Which Tools?

===========================================
===========================================
===========================================
Page Flows:

==>http://localhost:4200/:

const routes: Routes = [
    { path: '', component: HomeComponent, canActivate: [AuthGuard] },
   				==>AuthGuard:
   					==>No: If not in Cache's logged in: ==>Redirect to: this.router.navigate(['/account/login'] 
   					==>Yes: HomeComponent: As "dashboard" 
    { path: 'usershome', component: LayoutComponent },
    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },
    { path: 'account', loadChildren: accountModule },
    			==>Login: add logged-in user to Cache
    			==>Logout: remove logged-in user from Cache
    			==>Register/Update/Delete: interact with backend APIs (backend management storage) Or: Fake backend APIs (localStorage)
    { path: 'company-list', component: CompanyListComponent },

    // otherwise redirect to home
    { path: '**', redirectTo: '' }
];

==>


===========================================

===========================================
