
#Angular Data Enablement: KBA (practical-guide-keys) Guide

#Goals:

#Procedure:

##To Enable Data: list of data enablement scenarios

1. JavaScript Web Storage: Angular is client-side app, so can use Browser/DOM's ways (Browser is like Angular's JVM)
2. Mock Data
3. Local Data
4. Remote Data: RESTful APIs, Database, Server Integration, Cloud Platform
5. 

##To Add Local Data:

1. Local Data:
	Concept: between mock data and remote data
	==>Data are localized to some local fields and variables
2. Local Data Types:
	==>Type 1: JSON Array: a list of JSON data (JSON data is the core data type of Angular)
	==>Type 2: JavaScript Natives: Observable, Promise, Subject, ...
	==>Type 3: Angular Native Types: string, number, ...
	==>...

##To Add Data: JSON Array

1. Add: import { Observable, of as observableOf, merge } from 'rxjs';
2. Add the most common data model type: JSON:	export interface MdsTableItem { name: string; id: number; }
3. Add JSON Array: const EXAMPLE_DATA: MdsTableItem[] = [{id: 1, name: 'Hydrogen'}, {id: 2, name: 'Helium'},];
	==>This JSON Array is not simple data type like normal JSON Array
	==>It is MdsTableItem[]: so Angular enables it mapping like Java Jackson ObjectMapper
	==>In some code way, we can do "data: any[];" to enable a JSON Array or normal Angular array
4. Assign to local variable: data: MdsTableItem[] = EXAMPLE_DATA;
5. Enabling Observable: observableOf(this.data),
6. Optional: enable data merge and sort/paginator: MatTable has powerful internal component code to process its datasource and related sort/pagination

##To Add Data: Observable
	Observable<any>
	this.httpClient.get<any>
	this.httpClient.post<any>

##To Add Data: Promise

##To Add Data: Subject

##To Add Data: Database:

1. Client-Side Database:
	LocalForage:
		https://github.com/localForage/localForage
		https://codepen.io/thgreasi/pen/ojYKeE
	PouchDB dev here. In principle, you can use any client-side database with Angular. Personally I've written a few Angular apps that used straight-up PouchDB (never saw a need for angular-pouchdb TBH). Here's an open-source example: https://github.com/pouchdb/npm-browser
		https://github.com/pouchdb/npm-browser
		https://pouchdb.com/
2. Platform Based Data Persistence:
	Firebase real-time database
	MEAN Stack: MongoDB database

3. Other Data:
	Use Google Sheets as a backend database
		a user-friendly interface for populating data
		pushed all edits to a Firebase Realtime Database
		https://medium.com/firebase-developers/sheets-to-firebase-33132e31935b