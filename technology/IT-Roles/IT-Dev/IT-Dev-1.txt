
===========================================
IT-Dev:


==>Challenges:

	==>Challenge 1: Overloaded Task Items:
	
		For All: No matter how smart and talents or ever-top IT engineers:
	
		==>Added tasks
		==>Multi-Tasking
		==>Overloaded Tasks...
		==>
	
		==>Methods:
			==>Not adding additional ones right now...
			
				==>Not reading emails: for one hour...
				==>...
				==>...
				==>Being reached for items, issues, ..
				==>...
				
			
			==>Priorities...
			
			==>Methodologies...
	
				==>Core delivery
				==>Keys
				==>Staged-based
				==>Partial as core...
				==>
	
			==>

	==>Challenge 2: Concurrent/Multiple Task Items:
	
	==>Challenge 3: Non-Smooth Routines/Scenarios to Work-out / Breakthrough / Resolve issues/problems/needs/tasks:
					==>Non-Smooth:
						1) Blockers
						2) Dependencies
						3) Stage enabled
						4) ...
					==>

	==>Challenge 4: Large Data Sets and Large Test Data, etc.
	
	
	==>
	
	
	==>Why having some draft/comments code during dev processes?
		==>...
		==>...
		==>Like GO game:
			==>The top experts and professionals: always leave some undertermined moves: ... due to changes... and combo battles
				==>Only rookies and beginners finish all moves during one battle, ..., like coding finish all e2e for one simple
					code design or POC, ...
		==>...
		==>...
	
	
	
	Scenarios:
	
		==>UAT/PROD: CHG: should schedule: >= 3 days before...: minimal: 2 days beforehand...
			==>Being pushed to schedule UAT/PROD for the same / 2nd day: wrong basically
				==>This is something wrong in work practices....
			
				Quality
				Testing
				...
				Better items in UAT
				TCM time is also valuable...
				...
				Avoid UAT repeating deployment from PROD tags...
					==>Because many PROD tags should be deployed to UAT for re-testing before deployment to PROD:
						Aka: same PROD tags should also in UAT: codebase (except PROD config data)
						==>If UAT tags are similar to PROD, then no repeating
						==>But 50% can redeploy PROD tag into UAT tag and deployment to UAT:
							==>However, if UAT tags tested are as much as close to PROD tag, features are much easier to validate
							==>When PROD tag is ready,
								==>Create a new UAT UAT_tag_1: to stay the same as PROD tag - not directly use PROD tag name
					==>UAT tags: can be a branch code base
					==>PROD tags: should be from master and/or release branches for some apps
						==>For some sub-modules: master branch is fine: such as: MSSConversion sub-module
				Avoid UAT and PROD differences when doing PROD deployment
				...
				
===========================================
How to Deal With:

	Jerry:
		Ideal/Self-controlled Max Limit: example: before feeling sick (even though I know many feelings are from abusers' medicines, ...)
					==>Daily Scenario: Example: 8-7 (8-5 is normal...): 10 hours...
						==>Not meaning: some special days...
		
		Why 2-jobs: you can do 8-8, or 8-10?
			==>Because:
				1) Money: for debts
				2) Use Methods:	
					==>Limit / reduce / minimize all other activities except exercises
					==>...
				3) ...
				
		Why 1-job you cannot or prefer not?
			==>Because for 1-job, I want to live as normally as possibly like anyone else in this world...
			==>Aka: for 1-job: I don't want or prefer not: "Limit / reduce / minimize all other activities except exercises"
		
		
	==>Implicit...
	
		==>4pm/5pm Assignment ways... but imply that we/I want to see the updates tomorrow morning 8am standup...
		==>...
		==>...
		==>...

	==>Explicit...
	
		[...]: can I test MAINT DB data this evening?
		[...]: can I see the data in UAT on Sunday?
		[...]: can you migrate the data to PROD this weekend?
		[...]: can you migrate the data to PROD on Sunday?
		[...]: can ...?
	
	==>Their procedures...
	
	==>...

	==>...
	
	==>Stricter Makeup Ways:
	
		==>Mostly unfair...
		
		Manish: the reason why I added you a couple of weeks earlier to On-Call/Healthcheck is:
				==>Makeup ... because during initial months you might not be  up-to-speed
				[Jerry]: unfair, anyone has initial months and move to normal state: common senses and accommodated
						 ==>When moving to normal state, should be normal instead of enabling makeup like your scheduling of on-calls,
						 ==>How about you initial months, did you make up like this?
		Hari: the reason why I scheduled the window is: your apps don't have many AutoSys jobs...
				And you didn't restart my AutoSys job failure last night
				[Jerry]: My apps don't have many AutoSys jobs, but having other aspects... => all overall balanced
						 Also your KBA didn't say clearly we need to restart the AutoSys job immediately, instead it states
						 that RCA is needed first...
						 Also, having POC start the AutoSys job is normal when on-call doesn't have access or expertise, 
						 and KBA doesn't clear state it, and some jobs have been restarted more than one time after failures
						 Why did you override our shift using this way? confusing...
						 [Hari]: because by overriding this past week shift, so you will serve another shift before 05/26
						 		 ==>With this past shift for you, your next shift will be right after 05/26, ...
						 		 ==>So with this overriding, your next shift will be the week before 05/26
						 		 [Jerry]: no worries, Manish's scheduling methods/strategies will always move 1-2 weeks ahead
						 		 		  for me, ...
						 		 		  I think this is unfair, we should do whatever normal ways we do, ..., not either
						 		 		  through overriding or move 1-2 weeks ahead, ...
						 		 		  I will check who else are not included in the shifts before my next shift, ...
						 		 		  Shiv was always including himself in the shift

	==>Estimates:
		==>...
		==>Unsure: do not promise - this is one key...
		==>...
		
		==>Put on evaluation and meetings... and discussions...
		==>...

	==>Reporting/escalating-tendency coworkers/other-team members...
	
		==>....
		
		
		
		==>...
		
		
		==>You make me unhappy, I reporting you to mgmrs...
		
		==>You don't answer my chat, I reporting you to mgmrs...
		
		==>...
		
	
		==>Being nervous/worried about being reported, but himself/herself is not a reporting person, ...
			==>Difficult...
			==>Need to develop more methods and strategies, ...
			
			No.1: Balanced...
			...
			
		==>...
		
===========================================
